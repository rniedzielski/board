// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WhillBox should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <whillBox
          pictures={
            Array [
              "strawberry.png",
              "banana.png",
              "orange.png",
              "monkey.png",
            ]
          }
          selected={
            Array [
              1,
              3,
              3,
            ]
          }
        />,
        <buttons
          start={[Function]}
          stop={[Function]}
          stopAction={false}
        />,
        <p>
          You win: 
          <strong>
            0
             $
          </strong>
        </p>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "pictures": Array [
            "strawberry.png",
            "banana.png",
            "orange.png",
            "monkey.png",
          ],
          "selected": Array [
            1,
            3,
            3,
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "start": [Function],
          "stop": [Function],
          "stopAction": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "You win: ",
            <strong>
              0
               $
            </strong>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "You win: ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                0,
                " $",
              ],
            },
            "ref": null,
            "rendered": Array [
              0,
              " $",
            ],
            "type": "strong",
          },
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <whillBox
            pictures={
              Array [
                "strawberry.png",
                "banana.png",
                "orange.png",
                "monkey.png",
              ]
            }
            selected={
              Array [
                1,
                3,
                3,
              ]
            }
          />,
          <buttons
            start={[Function]}
            stop={[Function]}
            stopAction={false}
          />,
          <p>
            You win: 
            <strong>
              0
               $
            </strong>
          </p>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "pictures": Array [
              "strawberry.png",
              "banana.png",
              "orange.png",
              "monkey.png",
            ],
            "selected": Array [
              1,
              3,
              3,
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "start": [Function],
            "stop": [Function],
            "stopAction": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "You win: ",
              <strong>
                0
                 $
              </strong>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "You win: ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  0,
                  " $",
                ],
              },
              "ref": null,
              "rendered": Array [
                0,
                " $",
              ],
              "type": "strong",
            },
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
